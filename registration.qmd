---
title: "Registration"
---

Registration for SBDM2025 is open until the **31st of May 2025**.

::: callout-note
**Contributed talks** will be selected amongst the abstracts submitted before the **16th of May**.
:::

### Fees {style="text-align: center; margin-top: 30px;margin-bottom: 15px;"}

::: {style="text-align: left;"}
Registration fees include attendance to the entire meeting, coffee
breaks, lunchs and social events. Register until the **1st of
May** to benefit from a discount.

::: {.container-lg .justify-content-center .w-100}
::: justify-content-center
|                                           | Early registration (until 01/05) | Late registration (after 01/05) |
|:----------------------------:|:-------------------:|:-------------------:|
| Researchers, postdocs and permanent staff |               290€               |              350€               |
|       Master's and doctoral students       |               190€               |              250€               |
|       Local students (with financial support of NSCO & SEG)       |               95€               |              95€              |
|       Speakers       |               0€               |              0€               |
:::
:::

Note that you may benefit from a discount if you work in an institution
located in a low-income country (see the
[list](files/Listoflowincomecountries.pdf){target="_blank"})
:::

### How to proceed {style="text-align: center; margin-top: 30px;margin-bottom: 15px;"}

::: {style="text-align: left;"}
1.  Sign-up with a valid email address: a confirmation email will be
    sent to this address.

2.  Complete the registration form. You may submit a title and an
    abstract if you wish present a poster.

3.  You may edit your registration form until the **31st of May 2025**. To do
so, simply log in again with your credentials, update the fields of your
choice, and resubmit the form.

::: callout-warning
Your registration will only be considered complete and valid after your payment has been processed.
:::

:::

### Registration form {style="text-align: center; margin-top: 30px;margin-bottom: 15px;"}

```{=html}
<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-app.js";
  import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendEmailVerification } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-auth.js";

  const firebaseConfig = {
    apiKey: "AIzaSyCH3avPPXfXI49GTopvaFbeKrPtu8ufa2c",
    authDomain: "sbdm2025.firebaseapp.com",
    projectId: "sbdm2025",
    storageBucket: "sbdm2025.firebasestorage.app",
    messagingSenderId: "846447691095",
    appId: "1:846447691095:web:e41322d89f69949469ea12",
    measurementId: "G-G79REFBJ4H"
  };

  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);

    document.getElementById("login-form").addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent form submission

        const email = document.getElementById("email").value.trim();
        const password = document.getElementById("password").value.trim();

        if (!email || !password) {
            alert("Please enter both email and password.");
            return;
        }

        try {
            const userCredential = await signInWithEmailAndPassword(auth, email, password);
            if (!userCredential.user.emailVerified) {
                alert("Please verify your email address before logging in.");
                await signOut(auth);
                return;
            }
        } catch (error) {
            alert(error.message);
        }
    });


    document.getElementById("signin-form").addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent form submission

        const email = document.getElementById("signup-email").value.trim();
        const password = document.getElementById("signup-password").value.trim();

        if (!email || !password) {
            alert("Please enter both email and password.");
            return;
        }

        try {
            const userCredential = await createUserWithEmailAndPassword(auth, email, password);
            await sendEmailVerification(userCredential.user);
            alert("Verification email sent. Please check your inbox.");
        } catch (error) {
            alert(error.message);
        }
    });

  document.getElementById("logout-btn").addEventListener("click", async () => {
    await signOut(auth);
  });

  async function fetchUserData(email) {
    try {
      const response = await fetch(`https://misc.robustcircuit.eu/user/${email}`);
      const result = await response.json();
      console.log(result.data)
      if (result.success) {
        document.getElementById("formId").value = result.data.form_id;
        document.getElementById("formName").value = result.data.name;
        document.getElementById("formEmail").value = email;
        document.getElementById("formAffiliation").value = result.data.affiliation;
        document.getElementById("formTitle").value = result.data.title;
        document.getElementById("formAbstract").value = result.data.abstract;
        document.getElementById("formPresenter").value = result.data.presenter;
        document.getElementById("formAuthors").value = result.data.authors;
        if (result.data.discountRequest=="true"){
            document.getElementById("formDiscount").checked = true;
        }
        if (result.data.optOutGala=="true"){
            document.getElementById("formOptoutGala").checked = true;
        }
        // Prepopulate the radio button based on formSession
        const sessionValue = result.data.session; // Assuming this matches the radio values
        const radioSessionButton = document.querySelector(`input[name="formSession"][value="${sessionValue}"]`);
        if (radioSessionButton) {
            radioSessionButton.checked = true;
        }
        // Prepopulate the radio button based on formSession
        const presentsValue = result.data.poster; // Assuming this matches the radio values
        const radioPresentsButton = document.querySelector(`input[name="formPoster"][value="${presentsValue}"]`);
        if (radioPresentsButton) {
            radioPresentsButton.checked = true;
        }
        const foodValue = result.data.foodrestriction; // Assuming this matches the radio values
        const radioFoodButton = document.querySelector(`input[name="formFood"][value="${foodValue}"]`);
        if (radioFoodButton) {
            radioFoodButton.checked = true;
        }
        const positionValue = result.data.position; // Assuming this matches the radio values
        const radioPositionButton = document.querySelector(`input[name="formPosition"][value="${positionValue}"]`);
        if (radioPositionButton) {
            radioPositionButton.checked = true;
        }
        }
        document.getElementById("formEmail").value = email;
        const posterOptions = document.getElementsByName("formPoster");
        const abstractPoster = document.getElementById("abstractPoster");
        const sessionPick = document.getElementById("sessionPick");
        const titlePoster = document.getElementById("titlePoster");
        const authorsPoster = document.getElementById("authorsPoster");
        const presenterPoster = document.getElementById("presenterPoster");
        function toggleAbstract() {
            // Check if the "Yes" option is selected
            const isPosterSelected = document.querySelector('input[name="formPoster"]:checked')?.value === "true";
            // List of conditional fields
            const conditionalFields = [
            "formTitle",
            "formAuthors",
            "formPresenter",
            "formAbstract",
            ];
            const sessionRadios = document.querySelectorAll('input[name="formSession"]');

            // Set or remove required depending on the condition
            conditionalFields.forEach(id => {
                const el = document.getElementById(id);
                if (isPosterSelected) {
                    el.setAttribute("required", "required");
                } else {
                    el.removeAttribute("required");
                }
            });

            sessionRadios.forEach(radio => {
            if (isPosterSelected) {
                radio.setAttribute("required", "required");
            } else {
                radio.removeAttribute("required");
            }
            });

            abstractPoster.style.display = isPosterSelected ? "block" : "none";
            sessionPick.style.display = isPosterSelected ? "block" : "none";
            titlePoster.style.display = isPosterSelected ? "block" : "none";
            presenterPoster.style.display = isPosterSelected ? "block" : "none";
            authorsPoster.style.display = isPosterSelected ? "block" : "none";
        }
        // Add event listeners to both radio buttons
        posterOptions.forEach(option => option.addEventListener("change", toggleAbstract));
        // Run the function once on page load in case of pre-selected value
        toggleAbstract();

        // link formName and formPresenter
        const formName = document.getElementById("formName");
        const formPresenter = document.getElementById("formPresenter");
        // Track whether the user has manually changed the formPresenter field
        let presenterEdited = false;
        formPresenter.addEventListener("input", function () {
            presenterEdited = true; // Mark as manually edited
        });
        formName.addEventListener("input", function () {
            if (!presenterEdited) {
                formPresenter.value = formName.value;
            }
        });

      } catch (error) {
        console.error("Error fetching user data:", error);
    }
  }

  onAuthStateChanged(auth, (user) => {
    if (user && user.emailVerified) {
      document.getElementById("auth-container").style.display = "none";
      document.getElementById("signup-container").style.display = "none";
      document.getElementById("user-container").style.display = "block";
      document.getElementById("logged-container").style.display = "block";
      document.getElementById("user-email").innerText = `Logged in as: ${user.email}`;
      document.getElementById("formEmail").value = user.email;
      fetchUserData(user.email);
    } else {
      document.getElementById("logged-container").style.display = "none";
      document.getElementById("auth-container").style.display = "block";
      document.getElementById("signup-container").style.display = "block";
      document.getElementById("user-container").style.display = "none";
      document.getElementById("logged-container").style.display = "none";
    }
  });

  document.getElementById("registrationForm").addEventListener("submit", async function(event) {
    event.preventDefault();
    const user = auth.currentUser;
    if (!user || !user.emailVerified) return;
    // manage checkbox
    let discountCheckbox = document.getElementById("formDiscount");
    let optoutGalaCheckbox = document.getElementById("formOptoutGala");
    let hiddenInput = document.createElement("input");
    hiddenInput.type = "hidden";
    hiddenInput.name = "formDiscount";
    hiddenInput.value = discountCheckbox.checked ? "true" : "false";
    
    
    let hiddenInput2 = document.createElement("input");
    hiddenInput2.type = "hidden";
    hiddenInput2.name = "formOptoutGala";
    hiddenInput2.value=optoutGalaCheckbox.checked ? "true" : "false";

    // Get value of poster choice
    const isPresenting = document.querySelector('input[name="formPoster"]:checked').value === "true";

    // List of conditional fields
    const conditionalFields = [
    "formTitle",
    "formAuthors",
    "formPresenter",
    "formAbstract",
    ];
    const sessionRadios = document.querySelectorAll('input[name="formSession"]');

    // Set or remove required depending on the condition
    conditionalFields.forEach(id => {
    const el = document.getElementById(id);
        if (isPresenting) {
            el.setAttribute("required", "required");
        } else {
            el.removeAttribute("required");
        }
    });

    sessionRadios.forEach(radio => {
    if (isPresenting) {
        radio.setAttribute("required", "required");
    } else {
        radio.removeAttribute("required");
    }
    });

    // manages abstract text
    let abstractText = document.getElementById("formAbstract").value.trim();
    let wordCount = abstractText.split(/\s+/).filter(word => word.length > 0).length;
    if (wordCount > 200) {
        alert("Abstract cannot exceed 200 words.");
        return // Stop form submission
    }
    this.appendChild(hiddenInput);
    this.appendChild(hiddenInput2);
    const formData = {
      form_id: document.getElementById("formId").value,
      name: document.getElementById("formName").value,
      position: document.querySelector('input[name="formPosition"]:checked').value,
      affiliation: document.getElementById("formAffiliation").value,
      foodrestriction: document.querySelector('input[name="formFood"]:checked').value,
      poster: document.querySelector('input[name="formPoster"]:checked').value,
      title: document.getElementById("formTitle").value,
      authors: document.getElementById("formAuthors").value,
      presenter: document.getElementById("formPresenter").value,
      abstract: document.getElementById("formAbstract").value,
      session: document.querySelector('input[name="formSession"]:checked')?.value ?? "No session selected",
      discountRequest: hiddenInput.value,
      optoutGala: hiddenInput2.value,
      email: user.email,
    };
    try {
      const response = await fetch("https://misc.robustcircuit.eu/submit-form", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData)
      });
      const result = await response.json();
      document.getElementById("responseMessage").innerText = result.message;
        setTimeout(() => {
            const result = confirm("Do you want to proceed to the payment page?");
            if (result) {
                window.location.href = "https://dr07.azur-colloque.fr/inscription/en/367/inscription";
            } else {
                window.location.reload();
            }
        }, 1000);
    } catch (error) {
      document.getElementById("responseMessage").innerText = "Error submitting the form.";
    }
  });


</script>
```

```{=html}
<style>

    .auth-container, .signup-container, .user-container {
        background-color: #fff;
        padding: 10px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        width: 100%;
        text-align: center;
        margin: 10px;
    }

    input[type="email"], input[type="password"] {
        padding: 10px;
        margin: 8px 0;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
    }

    button {
        background-color: #007bff;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
        margin-top: 10px;
    }

    button:hover {
        background-color: #0056b3;
    }

    .user-container {
        display: none; /* Hidden by default */
    }

    .form-check-label{
      margin-left: 10px;
    }
    

</style>
```

<!-- Login Form -->

```{=html}

<div class="container-lg">
    <div class="logged-container row justify-content-center" id="logged-container" style="display:none;">
        <div class="col-md-5">
            <div class="d-flex justify-content-between align-items-center">
                <h5 id="user-email" class="mb-0">Logged in as:</h5>
                <button id="logout-btn" class="btn btn-danger" style="max-width:15%">Logout</button>
            </div>
        </div>
    </div>
    <div class="d-flex row justify-content-between flex-wrap" style="width:100%">
        <div style="width:45%">
            <div class="auth-container text-center" id="auth-container">
                <h2 style="margin-top:0px">Login</h2>
                <form id="login-form">
                <input type="email" id="email" class="form-control" name="username" placeholder="Email" autocomplete="username">
                <input type="password" id="password" class="form-control" name="password" placeholder="Password" autocomplete="current-password">
                <button type="submit" id="login-btn" class="btn-primary mt-2 w-75">Login</button>
                </form>
            </div>
        </div>
        <div style="width:45%">
            <div class="signup-container text-center" id="signup-container">
                <h2 style="margin-top:0px">Sign Up</h2>
                <form id="signin-form">
                <input type="email" id="signup-email" name="username" class="form-control" placeholder="Email" autocomplete="username">
                <input type="password" id="signup-password" name="password" class="form-control" placeholder="Password" autocomplete="new-password">
                <button type="submit" id="signup-btn" class="btn btn-success mt-2 w-75">Sign Up</button>
                </form>
            </div>
        </div>
    </div>
    <div class="user-container row justify-content-center" id="user-container">
        <div class="container mt-5" style="text-align:left">
            <div style="border-left: 5px solid #ffc107; background-color: #fff8e1; padding: 10px 15px; margin: 20px 0;">
            ⚠️ <strong>If you have already submitted your registration using the form below</strong> you may access the payment page here:<br><a href="https://dr07.azur-colloque.fr/inscription/en/367/inscription" target="_blank">https://dr07.azur-colloque.fr/inscription/en/367/inscription</a>.<br>Otherwise, you'll be redirected towards the payment page when clicking the submit button.
            </div>
        </div>
        <div class="container mt-5" style="text-align:left">
            <h3>Registration Form</h3>
            <form id="registrationForm">
                <input type="hidden" id="formId" name="formId" value="noId">
                <div class="mb-3">
                    <label for="formName" class="form-label">First & last name</label>
                    <input type="text" class="form-control" id="formName" required>
                </div>
                <div class="mb-3">
                    <label for="formEmail" class="form-label">Email</label>
                    <input type="text" class="form-control text-muted" id="formEmail" readonly>
                </div>
                <div class="mb-3">
                    <label for="formAffiliation" class="form-label">Affiliation</label>
                    <input type="text" class="form-control" id="formAffiliation" required>
                </div>
                <div class="mb-3">
                    <label class="form-label">Do you have food restrictions?</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formFood" id="foodoption1" value="No" checked required>
                        <label class="form-check-label" for="foodoption1">No</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formFood" id="foodoption2" value="Vegetarian" required>
                        <label class="form-check-label" for="foodoption2">Vegetarian</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formFood" id="foodoption3" value="Vegan" required>
                        <label class="form-check-label" for="foodoption3">Vegan</label>
                    </div>
                </div>
                <div class="mb-3">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="formOptoutGala" name="formOptoutGala" checked>
                        <label class="form-check-label" for="formOptoutGala">I will be present at the Gala dinner (June 17th)</label>
                        <div class="form-text text-muted">
                            Opting out of the Gala dinner will not reduce your registration fees, but it will help reduce food waste if you already know you won’t be attending.
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">What is your position?</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formPosition" id="optionposition1" value="Researcher" required>
                        <label class="form-check-label" for="optionposition1">Researcher, postdoc or permanent research staff</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formPosition" id="optionposition2" value="Student" required>
                        <label class="form-check-label" for="optionposition2">Master or PhD student</label>
                    </div>
                </div>
                <div class="mb-3">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="formDiscount" name="formDiscount">
                        <label class="form-check-label" for="formDiscount">Request a discount by ticking this box (low-income countries only)</label>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Will you present a poster at SBDM2025?</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formPoster" id="optionposter1" value="false" checked required>
                        <label class="form-check-label" for="optionposter1">No</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formPoster" id="optionposter2" value="true" required>
                        <label class="form-check-label" for="optionposter2">Yes</label>
                    </div>
                </div>
                <div class="mb-3" id="titlePoster">
                    <label for="formAbstract" class="form-label">Poster title</label>
                    <input type="text" class="form-control" id="formTitle">
                </div>
                <div class="mb-3" id="authorsPoster">
                    <label for="formAuthors" class="form-label">Authors</label>
                    <input type="text" class="form-control" id="formAuthors">
                </div>
                <div class="mb-3" id="presenterPoster">
                    <label for="formPresenter" class="form-label">Presenter</label>
                    <input type="text" class="form-control" id="formPresenter">
                </div>
                <div class="mb-3" id="abstractPoster">
                    <label for="formAbstract" class="form-label">Poster abstract (max. 200 words)</label>
                    <textarea class="form-control" id="formAbstract" rows="8" ></textarea>
                </div>
                <div class="mb-3" id="sessionPick">
                    <label class="form-label">Indicate the session that corresponds best to your poster.</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formSession" id="option1" value="Temporal Dynamics of decision making" >
                        <label class="form-check-label" for="option1">Temporal Dynamics of decision making</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formSession" id="option2" value="Causal manipulations in decision making" >
                        <label class="form-check-label" for="option2">Causal manipulations in decision making</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formSession" id="option3" value="Social cognition and decision making across species">
                        <label class="form-check-label" for="option3">Social cognition and decision making across species</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formSession" id="option4" value="Naturalistic & context-dependant decision making">
                        <label class="form-check-label" for="option4">Naturalistic & context-dependant decision making</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formSession" id="option5" value="Brain-body interaction and decision making">
                        <label class="form-check-label" for="option5">Brain-body interaction and decision making</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formSession" id="option6" value="Comparative decision across agents" required>
                        <label class="form-check-label" for="option6">Comparative decision across agents</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="formSession" id="option6" value="I am not sure" >
                        <label class="form-check-label" for="option6">I am not sure</label>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Save / Submit</button>
            </form>
            <p id="responseMessage" class="mt-3"></p>
        </div>
    </div>
</div>
```