---
title: "Registration"
---

Registration is not open yet.

We are still in the process of securing funding to make registration as
affordable as possible, especially for students and postdocs.

::: callout-warning
This page is under construction.
:::

```{=html}
<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-app.js";
  import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendEmailVerification } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-auth.js";

  const firebaseConfig = {
    apiKey: "AIzaSyCH3avPPXfXI49GTopvaFbeKrPtu8ufa2c",
    authDomain: "sbdm2025.firebaseapp.com",
    projectId: "sbdm2025",
    storageBucket: "sbdm2025.firebasestorage.app",
    messagingSenderId: "846447691095",
    appId: "1:846447691095:web:e41322d89f69949469ea12",
    measurementId: "G-G79REFBJ4H"
  };

  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);

  document.getElementById("login-btn").addEventListener("click", async () => {
    const email = document.getElementById("email").value;
    const password = document.getElementById("password").value;
    try {
      const userCredential = await signInWithEmailAndPassword(auth, email, password);
      if (!userCredential.user.emailVerified) {
        alert("Please verify your email address before logging in.");
        await signOut(auth);
        return;
      }
    } catch (error) {
      alert(error.message);
    }
  });

  document.getElementById("signup-btn").addEventListener("click", async () => {
    const email = document.getElementById("signup-email").value;
    const password = document.getElementById("signup-password").value;
    try {
      const userCredential = await createUserWithEmailAndPassword(auth, email, password);
      await sendEmailVerification(userCredential.user);
      alert("Verification email sent. Please check your inbox.");
    } catch (error) {
      alert(error.message);
    }
  });

  document.getElementById("logout-btn").addEventListener("click", async () => {
    await signOut(auth);
  });

  async function fetchUserData(email) {
    try {
      const response = await fetch(`https://misc.robustcircuit.eu/user/${email}`);
      const result = await response.json();
      console.log(result.data)
      if (result.success) {
        document.getElementById("formName").value = result.data.name;
        document.getElementById("formEmail").value = email;
        document.getElementById("formAffiliation").value = result.data.affiliation;
        document.getElementById("formAbstract").value = result.data.abstract;
        // Prepopulate the radio button based on formSession
        const sessionValue = result.data.session; // Assuming this matches the radio values
        const radioButton = document.querySelector(`input[name="formSession"][value="${sessionValue}"]`);
        if (radioButton) {
            radioButton.checked = true;
        }
      }
    } catch (error) {
      console.error("Error fetching user data:", error);
    }
  }

  onAuthStateChanged(auth, (user) => {
    if (user && user.emailVerified) {
      document.getElementById("auth-container").style.display = "none";
      document.getElementById("user-container").style.display = "block";
      document.getElementById("registrationForm").style.display = "block";
      document.getElementById("user-email").innerText = `Logged in as: ${user.email}`;
      fetchUserData(user.email);
    } else {
      document.getElementById("auth-container").style.display = "block";
      document.getElementById("user-container").style.display = "none";
      document.getElementById("registrationForm").style.display = "none";
    }
  });

  document.getElementById("registrationForm").addEventListener("submit", async function(event) {
    event.preventDefault();
    const user = auth.currentUser;
    if (!user || !user.emailVerified) return;
    const formData = {
      name: document.getElementById("name").value,
      email: user.email,
      message: document.getElementById("message").value
    };
    try {
      const response = await fetch("https://misc.robustcircuit.eu/submit-form", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData)
      });
      const result = await response.json();
      document.getElementById("responseMessage").innerText = result.message;
    } catch (error) {
      document.getElementById("responseMessage").innerText = "Error submitting the form.";
    }
  });
  
</script>
```

```{=html}
<style>
    body {
        font-family: sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
        background-color: #f4f4f4;
    }

    .auth-container, .signup-container, .user-container {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        width: 300px;
        text-align: center;
        margin: 10px;
    }

    input[type="email"], input[type="password"] {
        width: calc(100% - 22px);
        padding: 10px;
        margin: 8px 0;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
    }

    button {
        background-color: #007bff;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
        margin-top: 10px;
    }

    button:hover {
        background-color: #0056b3;
    }

    .user-container {
        display: none; /* Hidden by default */
    }

</style>
```

<!-- Login Form -->
```{=html}
<div class="auth-container" id="auth-container">
    <h2>Login</h2>
    <input type="email" id="email" placeholder="Email">
    <input type="password" id="password" placeholder="Password">
    <button id="login-btn">Login</button>
    <button id="logout-btn">Logout</button>
</div>

<div class="signup-container" id="signup-container">
    <h2>Sign Up</h2>
    <input type="email" id="signup-email" placeholder="Email">
    <input type="password" id="signup-password" placeholder="Password">
    <button id="signup-btn">Sign Up</button>
</div>

<div class="user-container" id="user-container">
    <h2 id="user-email">Logged in as:</h2>
</div>

<div class="container mt-5">
    <h2>Contact Form</h2>
    <form id="registrationForm">
        <div class="mb-3">
            <label for="formName" class="form-label">First & last name</label>
            <input type="text" class="form-control" id="formName" required>
        </div>
        <div class="mb-3">
            <label for="formAffiliation" class="form-label">Affiliation</label>
            <input type="text" class="form-control" id="formAffiliation" required>
        </div>
        <div class="mb-3">
            <label for="formEmail" class="form-label">Email</label>
            <input type="text" class="form-control" id="formEmail" readonly>
        </div>
        <div class="mb-3">
            <label for="formAbstract" class="form-label">Message</label>
            <textarea class="form-control" id="formAbstract" rows="8" required></textarea>
        </div>
        <div class="mb-3">
            <label class="form-label">Select an Option:</label>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="formSession" id="option1" value="Temporal Dynamics of decision making" required>
                <label class="form-check-label" for="option1">Temporal Dynamics of decision making</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="formSession" id="option2" value="Causal manipulations in decision making" required>
                <label class="form-check-label" for="option2">Causal manipulations in decision making</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="formSession" id="option3" value="Social cognition and decision making across species" required>
                <label class="form-check-label" for="option3">Social cognition and decision making across species</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="formSession" id="option4" value="Naturalistic & context-dependant decision making" required>
                <label class="form-check-label" for="option4">Naturalistic & context-dependant decision making</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="formSession" id="option5" value="Brain-body interaction and decision making" required>
                <label class="form-check-label" for="option5">Brain-body interaction and decision making</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="formSession" id="option6" value="Comparative decision across agents" required>
                <label class="form-check-label" for="option6">Comparative decision across agents</label>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
    <p id="responseMessage" class="mt-3"></p>
</div>

```
