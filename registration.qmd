---
title: "Registration"
---

Registration is not open yet.

We are still in the process of securing funding to make registration as
affordable as possible, especially for students and postdocs.

::: callout-warning
This page is under construction.
:::

```{=html}
<script type="module">

  // Import the functions you need from the SDKs you need

  import { initializeApp } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-app.js";

    import { getAnalytics } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-analytics.js";
    import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged,sendEmailVerification  } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-auth.js";
    

  // TODO: Add SDKs for Firebase products that you want to use

  // https://firebase.google.com/docs/web/setup#available-libraries


  // Your web app's Firebase configuration

  // For Firebase JS SDK v7.20.0 and later, measurementId is optional

  const firebaseConfig = {

    apiKey: "AIzaSyCH3avPPXfXI49GTopvaFbeKrPtu8ufa2c",

    authDomain: "sbdm2025.firebaseapp.com",

    projectId: "sbdm2025",

    storageBucket: "sbdm2025.firebasestorage.app",

    messagingSenderId: "846447691095",

    appId: "1:846447691095:web:e41322d89f69949469ea12",

    measurementId: "G-G79REFBJ4H"

  };


  // Initialize Firebase

  const app = initializeApp(firebaseConfig);

  const analytics = getAnalytics(app);

  const auth = getAuth(app);

    // Login with Email/Password
    document.getElementById("login-btn").addEventListener("click", async () => {
        const email = document.getElementById("email").value;
        const password = document.getElementById("password").value;
        try {
            const userCredential = await signInWithEmailAndPassword(auth, email, password);
            //const user = userCredential.user;

            if (!userCredential.user.emailVerified) {
                alert("Please verify your email address before logging in.");
                await signOut(auth); // Sign out the user if email is not verified
                return;
            }
        } catch (error) {
            alert(error.message);
        }
    });
    // Sign Up with Email/Password
    document.getElementById("signup-btn").addEventListener("click", async () => {
        const email = document.getElementById("signup-email").value;
        const password = document.getElementById("signup-password").value;
        try {
            const userCredential = await createUserWithEmailAndPassword(auth, email, password);
            const user = userCredential.user;

            await sendEmailVerification(user);
            alert("Verification email sent. Please check your inbox.");
        } catch (error) {
            alert(error.message);
        }
    });

    // Logout
    document.getElementById("logout-btn").addEventListener("click", async () => {
        await signOut(auth);
    });

    onAuthStateChanged(auth, (user) => {
    if (user && user.emailVerified) {
        document.getElementById("auth-container").style.display = "none";
        document.getElementById("user-container").style.display = "block";
        document.getElementById("user-email").innerText = `Logged in as: ${user.email}`;

        // Load the Google Form
        document.getElementById("google-form-container").style.display = "block";
        document.getElementById("google-form-container").innerHTML = `
        <iframe src="https://docs.google.com/forms/d/e/1FAIpQLScWF9cXG9kIy_PeChCBGnfY-f7oAuvOjayS2HLwUYlqgtngiA/viewform?embedded=true" width="640" height="403" frameborder="0" marginheight="0" marginwidth="0">Loadingâ€¦</iframe>
        `;
    } else if (user && !user.emailVerified) {
        alert("Please verify your email address to access the form.");
        signOut(auth);
        document.getElementById("auth-container").style.display = "block";
        document.getElementById("user-container").style.display = "none";
        document.getElementById("google-form-container").innerHTML = "";
        return;
    } else {
        document.getElementById("auth-container").style.display = "block";
        document.getElementById("user-container").style.display = "none";
        document.getElementById("google-form-container").innerHTML = "";
    }
    });

</script>
```

```{=html}
<style>
    body {
        font-family: sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
        background-color: #f4f4f4;
    }

    .auth-container, .signup-container, .user-container {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        width: 300px;
        text-align: center;
        margin: 10px;
    }

    input[type="email"], input[type="password"] {
        width: calc(100% - 22px);
        padding: 10px;
        margin: 8px 0;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
    }

    button {
        background-color: #007bff;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
        margin-top: 10px;
    }

    button:hover {
        background-color: #0056b3;
    }

    .user-container {
        display: none; /* Hidden by default */
    }

</style>
```

<!-- Login Form -->
```{=html}
<div class="auth-container" id="auth-container">
    <h2>Login</h2>
    <input type="email" id="email" placeholder="Email">
    <input type="password" id="password" placeholder="Password">
    <button id="login-btn">Login</button>
    <button id="logout-btn">Logout</button>
</div>

<div class="signup-container" id="signup-container">
    <h2>Sign Up</h2>
    <input type="email" id="signup-email" placeholder="Email">
    <input type="password" id="signup-password" placeholder="Password">
    <button id="signup-btn">Sign Up</button>
</div>

<div class="user-container" id="user-container">
    <h2 id="user-email">Logged in as:</h2>
</div>

<div id="google-form-container" style="display: none;"> </div>

```
